apiVersion: v1
kind: Service
metadata:
  name: raft
  labels:
    app: rep
spec:
  clusterIP: None
  selector:      # tiene que coincidir con label definido en pod de StatefulSet
    app: rep  # Para dar de alta automaticamente en DNS a los PODS ligados
  ports:
  - port: 29000
    name: servidor-port
    protocol: TCP
    targetPort: 29000

---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: "nodo"
spec:
  serviceName: raft
  replicas: 3
  podManagementPolicy: Parallel   # por defecto seria OrderedReady (secuencial)
  selector:
    matchLabels:
      app: rep    # tiene que corresponder a .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: rep
    spec:
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "nodo"
                  operator: In
                  values:
                  - nodo
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: raft
        image: localhost:5001/raft:latest
        env:
        - name: MISUBDOMINIODNS
          value: raft.default.svc.cluster.local
        - name: MINOMBREPOD		# primera replica r-0, segunda r-1, etc
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command:
        - /raft
        - $(MINOMBREPOD)
        - nodo-0.raft.default.svc.cluster.local:29000
        - nodo-1.raft.default.svc.cluster.local:29000
        - nodo-2.raft.default.svc.cluster.local:29000
        ports:
        - containerPort: 29000

---
# Puesta en marcha de SEGUNDO Pod para testing 1 interactivo
apiVersion: v1
kind: Pod
metadata:
  name: t
spec:
  restartPolicy: Never
  containers:
  - name: rep
    image: localhost:5001/clienttest:latest
    command:
    - sleep
    - "3600"
    ports:
    - containerPort: 29000
---